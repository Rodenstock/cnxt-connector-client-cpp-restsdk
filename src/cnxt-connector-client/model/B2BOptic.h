/**
 * CNXT-Connector
 * The CNXT-Connector is developed by Rodenstock GmbH to integrate data from measurement devices such as DNEye<sup>®</sup> Scanner, Rodenstock Fundus Scanner, and ImpressionIST<sup>®</sup> into 3rd party applications as well as into several applications of Rodenstock such as WinFit, Rodenstock Consulting etc. If you have any feedback then please feel free to contact us via email. Copyright © Rodenstock GmbH 2020
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: cnxt@rodenstock.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.2.3.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * B2BOptic.h
 *
 * Represents B2BOptic related data
 */

#ifndef COM_RODENSTOCK_CNXT_CONNECTOR_CLIENT_MODEL_B2BOptic_H_
#define COM_RODENSTOCK_CNXT_CONNECTOR_CLIENT_MODEL_B2BOptic_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace rodenstock {
namespace cnxt {
namespace connector {
namespace client {
namespace model {


/// <summary>
/// Represents B2BOptic related data
/// </summary>
class  B2BOptic
    : public ModelBase
{
public:
    B2BOptic();
    virtual ~B2BOptic();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// B2BOptic members

    /// <summary>
    /// Represents the B2BOptic related data as XML Document
    /// </summary>
    utility::string_t getXml() const;
    bool xmlIsSet() const;
    void unsetXml();

    void setXml(const utility::string_t& value);

    /// <summary>
    /// Represents the B2BOptic related data as JSON
    /// </summary>
    utility::string_t getJson() const;
    bool jsonIsSet() const;
    void unsetJson();

    void setJson(const utility::string_t& value);


protected:
    utility::string_t m_Xml;
    bool m_XmlIsSet;
    utility::string_t m_Json;
    bool m_JsonIsSet;
};


}
}
}
}
}
}

#endif /* COM_RODENSTOCK_CNXT_CONNECTOR_CLIENT_MODEL_B2BOptic_H_ */
